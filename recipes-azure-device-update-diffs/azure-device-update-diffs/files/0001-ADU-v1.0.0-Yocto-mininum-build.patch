From 6c4f9d0880254bf590dcdeb0fb55cde827f822f0 Mon Sep 17 00:00:00 2001
From: Nox W <wewilair@microsoft.com>
Date: Sat, 10 Dec 2022 09:07:31 +0000
Subject: [PATCH 1/4] ADU v1.0.0 Yocto mininum build

---
 src/CMakeLists.txt              | 30 ++++++++++-----
 src/cmake/Findbsdiff.cmake      | 30 +++++++++++++++
 src/cmake/Findzstd.cmake        | 67 +++++++++++++++++++++++++++++++++
 src/hash_utility/CMakeLists.txt | 11 +++++-
 src/io_utility/CMakeLists.txt   | 54 ++++++++++++++++++++++----
 5 files changed, 172 insertions(+), 20 deletions(-)
 create mode 100644 src/cmake/Findbsdiff.cmake
 create mode 100644 src/cmake/Findzstd.cmake

diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 5e6517a..f5326ec 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -30,20 +30,30 @@ if (MINGW)
     set(DUMPEXTFS_DEPENDENCIES_ONLY ON)
 endif()
 
+# NOTE: Added for ADU Yocto build
+find_path(GSL_INCLUDE_DIR gsl)
+if (GSL_INCLUDE_DIR STREQUAL "GSL_INCLUDE_DIR-NOTFOUND")
+  message(FATAL_ERROR "Could not find MS Guidelines Support Library.")
+endif()
+
 if (NOT DUMPEXTFS_DEPENDENCIES_ONLY)
     add_subdirectory(io_utility)
-    add_subdirectory(io_utility/gtest)
+    # NOTE: Ignored - for ADU Yocto build
+    # add_subdirectory(io_utility/gtest)
     add_subdirectory(diffs)
-    add_subdirectory(diffs/gtest)
+    # NOTE: Ignored - for ADU Yocto build
+    # add_subdirectory(diffs/gtest)
     add_subdirectory(diffs/api)
-    add_subdirectory(tools/applydiff)
-    add_subdirectory(tools/dumpdiff)
-    add_subdirectory(tools/zstd_compress_file)
-
-    if (UNIX)
-        add_subdirectory(tools/dumpextfs)
-        add_subdirectory(packaging/debian)
-    endif()
+    # NOTE: Ignored - for ADU Yocto build
+    # add_subdirectory(tools/applydiff)
+    # add_subdirectory(tools/dumpdiff)
+    # add_subdirectory(tools/zstd_compress_file)
+
+    # NOTE: Ignored - for ADU Yocto build
+    #if (UNIX)
+    #    add_subdirectory(tools/dumpextfs)
+    #    add_subdirectory(packaging/debian)
+    #endif()
 
     install(TARGETS adudiffapi)
 endif()
diff --git a/src/cmake/Findbsdiff.cmake b/src/cmake/Findbsdiff.cmake
new file mode 100644
index 0000000..e385ce6
--- /dev/null
+++ b/src/cmake/Findbsdiff.cmake
@@ -0,0 +1,30 @@
+# - Find BSDIFF
+# Find the BSDIFF library 
+# This module defines
+#  BSDIFF_INCLUDE_DIRS, where to find bsdiff.h
+# BSDIFF_LIBRARIES, the libraries needed to use BSDIFF
+#
+
+find_path(BSDIFF_INCLUDE_DIRS
+    NAMES bsdiff.h
+    PATH_SUFFIXES bsdiff
+)
+mark_as_advanced(BSDIFF_INCLUDE_DIRS)
+
+include(SelectLibraryConfigurations)
+
+find_library(BSDIFF_LIBRARY_RELEASE NAMES bsdiff PATH_SUFFIXES lib)
+find_library(BSDIFF_LIBRARY_DEBUG NAMES bsdiff PATH_SUFFIXES lib)
+select_library_configurations(BSDIFF)
+
+find_library(DIVSUFSORT_LIBRARY_RELEASE NAMES divsufsort64 PATH_SUFFIXES lib)
+find_library(DIVSUFSORT_LIBRARY_DEBUG NAMES divsufsort64 PATH_SUFFIXES lib)
+select_library_configurations(DIVSUFSORT)
+
+find_package(BZip2)
+
+set(BSDIFF_LIBRARIES ${DIVSUFSORT_LIBRARY} ${BSDIFF_LIBRARY} ${BZIP2_LIBRARIES})
+mark_as_advanced(BSDIFF_LIBRARIES)
+
+include(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(BSDIFF DEFAULT_MSG BSDIFF_INCLUDE_DIRS BSDIFF_LIBRARIES)
diff --git a/src/cmake/Findzstd.cmake b/src/cmake/Findzstd.cmake
new file mode 100644
index 0000000..90de0c1
--- /dev/null
+++ b/src/cmake/Findzstd.cmake
@@ -0,0 +1,67 @@
+if(zstd_FOUND)
+  return()
+endif()
+
+if(ZSTD_FROM_INTERNET)
+  # Although ${zstd_FIND_VERSION} was requested, let's download a newer version.
+  # Note: The directory structure has changed in 1.3.0; we only support 1.3.0
+  # and newer.
+  set(zstd_version "1.5.2")
+  set(zstd_url https://github.com/facebook/zstd/archive/v${zstd_version}.tar.gz)
+
+  set(zstd_dir ${CMAKE_BINARY_DIR}/zstd-${zstd_version})
+  set(zstd_build ${CMAKE_BINARY_DIR}/zstd-build)
+
+  if(NOT EXISTS "${zstd_dir}.tar.gz")
+    file(DOWNLOAD "${zstd_url}" "${zstd_dir}.tar.gz" STATUS download_status)
+    list(GET download_status 0 error_code)
+    if(error_code)
+      file(REMOVE "${zstd_dir}.tar.gz")
+      list(GET download_status 1 error_message)
+      message(FATAL "Failed to download zstd: ${error_message}")
+    endif()
+  endif()
+
+  execute_process(
+    COMMAND tar xf "${zstd_dir}.tar.gz"
+    WORKING_DIRECTORY "${CMAKE_BINARY_DIR}"
+    RESULT_VARIABLE tar_error)
+  if(NOT tar_error EQUAL 0)
+    message(FATAL "extracting ${zstd_dir}.tar.gz failed")
+  endif()
+
+  set(ZSTD_BUILD_SHARED OFF)
+  add_subdirectory("${zstd_dir}/build/cmake" "${zstd_build}" EXCLUDE_FROM_ALL)
+
+  add_library(ZSTD::ZSTD ALIAS libzstd_static)
+  set_target_properties(
+    libzstd_static
+    PROPERTIES
+    INTERFACE_INCLUDE_DIRECTORIES "$<BUILD_INTERFACE:${zstd_dir}/lib>")
+
+  set(zstd_FOUND TRUE)
+else()
+  find_library(ZSTD_LIBRARY zstd)
+  find_path(ZSTD_INCLUDE_DIR zstd.h)
+
+  include(FindPackageHandleStandardArgs)
+  find_package_handle_standard_args(
+    zstd "please install libzstd or use -DZSTD_FROM_INTERNET=ON"
+    ZSTD_INCLUDE_DIR ZSTD_LIBRARY)
+  mark_as_advanced(ZSTD_INCLUDE_DIR ZSTD_LIBRARY)
+
+  add_library(ZSTD::ZSTD UNKNOWN IMPORTED)
+  set_target_properties(
+    ZSTD::ZSTD
+    PROPERTIES
+    IMPORTED_LOCATION "${ZSTD_LIBRARY}"
+    INTERFACE_INCLUDE_DIRECTORIES "${ZSTD_INCLUDE_DIR}")
+endif()
+
+include(FeatureSummary)
+set_package_properties(
+  zstd
+  PROPERTIES
+  URL "https://facebook.github.io/zstd"
+  DESCRIPTION "Zstandard - Fast real-time compression algorithm")
+  
\ No newline at end of file
diff --git a/src/hash_utility/CMakeLists.txt b/src/hash_utility/CMakeLists.txt
index b5cea8f..3713f74 100644
--- a/src/hash_utility/CMakeLists.txt
+++ b/src/hash_utility/CMakeLists.txt
@@ -1,7 +1,14 @@
 add_library(hash_utility STATIC hash_utility.cpp)
 
-find_package(Microsoft.GSL CONFIG REQUIRED)
-target_link_libraries(hash_utility PRIVATE Microsoft.GSL::GSL)
+# NOTE: Skip for ADU Yocto
+#find_package(Microsoft.GSL CONFIG REQUIRED)
+#target_link_libraries(hash_utility PRIVATE Microsoft.GSL::GSL)
+
+find_library(GSL_LIBRARY gsl)
+find_path(GSL_INCLUDE_DIR gsl)
+if (GSL_INCLUDE_DIR STREQUAL "GSL_INCLUDE_DIR-NOTFOUND")
+  message(FATAL_ERROR "Could not find MS Guidelines Support Library.")
+endif()
 
 if (WIN32 OR MINGW)
 target_link_libraries(hash_utility PRIVATE bcrypt.lib)
diff --git a/src/io_utility/CMakeLists.txt b/src/io_utility/CMakeLists.txt
index 88f1ef8..62349af 100644
--- a/src/io_utility/CMakeLists.txt
+++ b/src/io_utility/CMakeLists.txt
@@ -24,15 +24,52 @@ if(UNIX)
     target_compile_options(io_utility PRIVATE -fPIC)
 endif()
  
-find_package(ZLIB REQUIRED)
-find_package(zstd CONFIG REQUIRED)
-find_package(Microsoft.GSL CONFIG REQUIRED)
-target_link_libraries(io_utility PRIVATE Microsoft.GSL::GSL)
+find_library(ZSTD_LIBRARY zstd)
+find_path(ZSTD_INCLUDE_DIR zstd.h)
 
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(
+zstd "please install libzstd or use -DZSTD_FROM_INTERNET=ON"
+ZSTD_INCLUDE_DIR ZSTD_LIBRARY)
+mark_as_advanced(ZSTD_INCLUDE_DIR ZSTD_LIBRARY)
+
+add_library(ZSTD::ZSTD UNKNOWN IMPORTED)
+set_target_properties(
+ZSTD::ZSTD
+PROPERTIES
+IMPORTED_LOCATION "${ZSTD_LIBRARY}"
+INTERFACE_INCLUDE_DIRECTORIES "${ZSTD_INCLUDE_DIR}")
+
+include(FeatureSummary)
+set_package_properties(
+  zstd
+  PROPERTIES
+  URL "https://facebook.github.io/zstd"
+  DESCRIPTION "Zstandard - Fast real-time compression algorithm")
+
+find_library(GSL_LIBRARY gsl)
+find_path(GSL_INCLUDE_DIR gsl)
+if (GSL_INCLUDE_DIR STREQUAL "GSL_INCLUDE_DIR-NOTFOUND")
+  message(FATAL_ERROR "Could not find MS Guidelines Support Library.")
+endif()
+
+find_library(BSDIFF_LIBRARY bsidff)
+find_path(BSDIFF_INCLUDE_DIR bsdiff.h)
+if (BSDIFF_INCLUDE_DIR STREQUAL "BSDIFF_INCLUDE_DIR-NOTFOUND")
+ message(FATAL_ERROR "Could not find BSDiff Library.")
+endif()
+
+# NOTE: Comment our for ADU Yocto
+#find_package(ZLIB REQUIRED)
+#find_package(zstd CONFIG REQUIRED)
+#find_package(Microsoft.GSL CONFIG REQUIRED)
+#target_link_libraries(io_utility PRIVATE Microsoft.GSL::GSL)
+ 
 target_link_libraries(io_utility PUBLIC error_utility)
 
 if(UNIX)
-target_link_libraries(io_utility PUBLIC zstd::libzstd_static)
+#target_link_libraries(io_utility PUBLIC zstd::libzstd_static)
+target_link_libraries(io_utility PUBLIC ZSTD::ZSTD)
 target_link_libraries(io_utility PRIVATE ZLIB::ZLIB)
 target_link_libraries(io_utility PUBLIC ${ZLIB_LIBRARIES})
 elseif(WIN32)
@@ -40,13 +77,14 @@ target_link_libraries(io_utility PUBLIC zstd::libzstd_shared)
 target_link_libraries(io_utility PRIVATE ZLIB::ZLIB)
 endif()
 
-find_package(bsdiff REQUIRED)
+#find_package(bsdiff REQUIRED)
 target_link_libraries(io_utility PUBLIC ${BSDIFF_LIBRARIES})
 
 target_include_directories(io_utility PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} 
 	${PROJECT_SOURCE_DIR}/error_utility
 	${PROJECT_SOURCE_DIR}/hash_utility
 	${ZLIB_INCLUDE_DIRS}
-	${MS_GSL_INCLUDE_DIR}
-	${BSDIFF_INCLUDE_DIRS}
+#	${MS_GSL_INCLUDE_DIR}
+#	${BSDIFF_INCLUDE_DIRS}
+    ${BSDIFF_INCLUDE_DIR}
 )
\ No newline at end of file
-- 
2.25.1

